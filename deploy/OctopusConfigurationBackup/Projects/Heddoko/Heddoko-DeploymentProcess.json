{
  "$type": "Octopus.Core.Model.Projects.DeploymentProcess, Octopus.Core",
  "Id": "deploymentprocess-Projects-1",
  "OwnerId": "Projects-1",
  "Version": 63,
  "Steps": [
    {
      "Id": "5fea41c0-660f-48d8-9640-0d50173780ee",
      "Name": "Confirm Deployment",
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "RequiresPackagesToBeAcquired": false,
      "Actions": [
        {
          "Id": "631f68ba-e6a4-4529-81ff-aef4ffccbc59",
          "Name": "Confirm Deployment",
          "ActionType": "Octopus.Manual",
          "Environments": [
            "Environments-2"
          ],
          "Channels": [],
          "TenantTags": [],
          "Properties": {
            "Octopus.Action.Manual.Instructions": "Are you sure ypu want to deploy to production?"
          }
        }
      ],
      "Properties": {}
    },
    {
      "Id": "a7613495-9cac-4c28-a984-dbadb49a09b1",
      "Name": "Migrate Database",
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "RequiresPackagesToBeAcquired": false,
      "Actions": [
        {
          "Id": "64236593-59e2-41a1-a8c2-edcb1337b992",
          "Name": "Migrate Database",
          "ActionType": "Octopus.TentaclePackage",
          "Environments": [],
          "Channels": [],
          "TenantTags": [],
          "Properties": {
            "Octopus.Action.Package.AutomaticallyRunConfigurationTransformationFiles": "True",
            "Octopus.Action.Package.AutomaticallyUpdateAppSettingsAndConnectionStrings": "True",
            "Octopus.Action.EnabledFeatures": "Octopus.Features.CustomScripts,Octopus.Features.ConfigurationVariables,Octopus.Features.ConfigurationTransforms",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.Package.FeedId": "feeds-teamcity-packages",
            "Octopus.Action.Package.PackageId": "DAL",
            "Octopus.Action.CustomScripts.Deploy.ps1": "    Write-Host \"Getting prev successful migration to rollback \"\r\n    \r\n    $connectionString = $OctopusParameters[\"Heddoko.ConnectionString\"]\r\n    $sqlCommand = $OctopusParameters[\"Heddoko.GetLastMigrationQuery\"]\r\n    \r\n    $connection = new-object system.data.SqlClient.SQLConnection($connectionString)\r\n    $command = new-object system.data.sqlclient.sqlcommand($sqlCommand,$connection)\r\n    $connection.Open()\r\n\r\n    $res = $command.executescalar()\r\n    \r\n    Set-OctopusVariable -name \"MigrationToRollback\" -value $res\r\n    \r\n    Write-Host \"Set MigrationToRollback variable:  '$res'\"\r\n\r\n    $connection.Close();\r\n    \r\n    Write-Host \"Updating DB\"\r\n    .\\migrate.exe DAL.dll /startupConfigurationFile=\"DAL.dll.config\" /verbose",
            "Octopus.Action.Package.AdditionalXmlConfigurationTransforms": "App.#{Octopus.Environment.Name}.config => DAL.dll.config"
          }
        }
      ],
      "Properties": {
        "Octopus.Action.TargetRoles": "web-server"
      }
    },
    {
      "Id": "9cc2399b-6009-4ee3-af4c-35e46fc5b23d",
      "Name": "Deploy Admin Website",
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "RequiresPackagesToBeAcquired": false,
      "Actions": [
        {
          "Id": "aae0dff4-a58a-485f-94b8-836ccd6c3828",
          "Name": "Deploy Admin Website",
          "ActionType": "Octopus.IIS",
          "Environments": [],
          "Channels": [],
          "TenantTags": [],
          "Properties": {
            "Octopus.Action.IISWebSite.DeploymentType": "webSite",
            "Octopus.Action.IISWebSite.CreateOrUpdateWebSite": "True",
            "Octopus.Action.IISWebSite.Bindings": "[{\"protocol\":\"http\",\"ipAddress\":\"*\",\"port\":\"#{Heddoko.WebSite.Port}\",\"host\":\"#{Heddoko.WebSite.HostName}\",\"thumbprint\":\"\",\"requireSni\":false,\"enabled\":true}]",
            "Octopus.Action.IISWebSite.ApplicationPoolFrameworkVersion": "v4.0",
            "Octopus.Action.IISWebSite.ApplicationPoolIdentityType": "ApplicationPoolIdentity",
            "Octopus.Action.IISWebSite.EnableAnonymousAuthentication": "True",
            "Octopus.Action.IISWebSite.EnableBasicAuthentication": "False",
            "Octopus.Action.IISWebSite.EnableWindowsAuthentication": "False",
            "Octopus.Action.IISWebSite.WebApplication.ApplicationPoolFrameworkVersion": "v4.0",
            "Octopus.Action.IISWebSite.WebApplication.ApplicationPoolIdentityType": "ApplicationPoolIdentity",
            "Octopus.Action.Package.AutomaticallyRunConfigurationTransformationFiles": "True",
            "Octopus.Action.Package.AutomaticallyUpdateAppSettingsAndConnectionStrings": "True",
            "Octopus.Action.EnabledFeatures": "Octopus.Features.IISWebSite,Octopus.Features.ConfigurationTransforms,Octopus.Features.ConfigurationVariables",
            "Octopus.Action.Package.FeedId": "feeds-teamcity-packages",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.Package.PackageId": "Heddoko",
            "Octopus.Action.IISWebSite.WebSiteName": "Heddoko",
            "Octopus.Action.IISWebSite.ApplicationPoolName": "Heddoko"
          }
        }
      ],
      "Properties": {
        "Octopus.Action.TargetRoles": "web-server"
      }
    },
    {
      "Id": "5cd0b298-6bc1-41c5-972e-0626d44bbc97",
      "Name": "Deploy Windows Service",
      "Condition": "Success",
      "StartTrigger": "StartAfterPrevious",
      "RequiresPackagesToBeAcquired": false,
      "Actions": [
        {
          "Id": "3662582c-e9a6-4e94-bdc0-bd007f2fde6f",
          "Name": "Deploy Windows Service",
          "ActionType": "Octopus.WindowsService",
          "Environments": [],
          "Channels": [],
          "TenantTags": [],
          "Properties": {
            "Octopus.Action.WindowsService.CreateOrUpdateService": "True",
            "Octopus.Action.WindowsService.ServiceAccount": "LocalSystem",
            "Octopus.Action.WindowsService.StartMode": "auto",
            "Octopus.Action.Package.AutomaticallyRunConfigurationTransformationFiles": "True",
            "Octopus.Action.Package.AutomaticallyUpdateAppSettingsAndConnectionStrings": "True",
            "Octopus.Action.EnabledFeatures": "Octopus.Features.WindowsService,Octopus.Features.ConfigurationTransforms,Octopus.Features.ConfigurationVariables",
            "Octopus.Action.Package.FeedId": "feeds-teamcity-packages",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.Package.PackageId": "HeddokoService",
            "Octopus.Action.WindowsService.ExecutablePath": "HeddokoService.exe",
            "Octopus.Action.WindowsService.ServiceName": "#{ServiceName}",
            "Octopus.Action.Package.AdditionalXmlConfigurationTransforms": "App.#{Octopus.Environment.Name}.config => HeddokoService.exe.config",
            "Octopus.Action.WindowsService.Arguments": "-flush"
          }
        }
      ],
      "Properties": {
        "Octopus.Action.TargetRoles": "web-server"
      }
    },
    {
      "Id": "ea292033-fca0-487d-9a9e-28b949d2fd53",
      "Name": "Rollback",
      "Condition": "Failure",
      "StartTrigger": "StartAfterPrevious",
      "RequiresPackagesToBeAcquired": false,
      "Actions": [
        {
          "Id": "dd2739c4-20ab-4b2f-998e-3baa75548268",
          "Name": "Rollback Database",
          "ActionType": "Octopus.TentaclePackage",
          "Environments": [],
          "Channels": [],
          "TenantTags": [],
          "Properties": {
            "Octopus.Action.Package.AutomaticallyRunConfigurationTransformationFiles": "True",
            "Octopus.Action.Package.AutomaticallyUpdateAppSettingsAndConnectionStrings": "True",
            "Octopus.Action.EnabledFeatures": "Octopus.Features.CustomScripts,Octopus.Features.ConfigurationVariables,Octopus.Features.ConfigurationTransforms",
            "Octopus.Action.Package.DownloadOnTentacle": "False",
            "Octopus.Action.Package.FeedId": "feeds-teamcity-packages",
            "Octopus.Action.Package.PackageId": "DAL",
            "Octopus.Action.CustomScripts.Deploy.ps1": "$targetMigration = $OctopusParameters[\"Octopus.Action[Migrate Database].Output.MigrationToRollback\"]\r\n\r\nWrite-Host \"Rollback to migration $targetMigration\"\r\n\r\n.\\migrate.exe  DAL.dll /startupConfigurationFile=\"DAL.dll.config\" /targetMigration=\"$($targetMigration)\" /verbose"
          }
        },
        {
          "Id": "f7f77ff1-3858-4ad6-9b7a-fe66f54ec9be",
          "Name": "Deploy last successful release",
          "ActionType": "Octopus.Script",
          "Environments": [],
          "Channels": [],
          "TenantTags": [],
          "Properties": {
            "Chain_ApiKey": {
              "SensitiveValue": "ESO7a2n3FuBrHh3/elHYnW111bq0fTLmCL0cM98KtQA=|AAAAAAAAAAAAAAAAAAAAAA=="
            },
            "Octopus.Action.Script.Syntax": "PowerShell",
            "Octopus.Action.Script.ScriptSource": "Inline",
            "Octopus.Action.Script.ScriptBody": "function OctopusDeploymentSuccessful ($taskApiPath, $octopus_server, $octopus_apikey) {\r\n    $octopus_url = \"$($octopus_server)$taskApiPath\"\r\n    $result = Invoke-RestMethod -Uri $octopus_url -ContentType application/json -Headers @{\"X-Octopus-ApiKey\"=\"$octopus_apikey\"} -Method Get\r\n    $result.State -eq \"Success\"\r\n}\r\n\r\nfunction OctopusPreviousSuccessfulReleaseId ($octopus_server, $octopus_apikey, $project, $environment) {\r\n    $octopus_url = \"$($octopus_server)/api/deployments?projects=$project&environments=$environment\"\r\n    $result = Invoke-RestMethod -Uri $octopus_url -ContentType application/json -Headers @{\"X-Octopus-ApiKey\"=\"$octopus_apikey\"} -Method Get\r\n    $item = $result.Items |\r\n        where { OctopusDeploymentSuccessful -taskApiPath $_.Links.Task -octopus_server $octopus_server -octopus_apikey $octopus_apikey} |\r\n        Select-Object -first 1\r\n    $item.ReleaseId\r\n}\r\n\r\nWrite-Host \"**********\"\r\nWrite-Host \"Chained Deployment of '$Chain_ProjectName' last successful release to '$Chain_DeployTo'.\"\r\n\r\nWrite-Host \"**********\"\r\n\r\n$baseUri = $OctopusParameters['Octopus.Web.BaseUrl']\r\n$reqheaders = @{\"X-Octopus-ApiKey\" = $Chain_ApiKey }\r\n\r\n# Find Environment\r\n$environments = Invoke-WebRequest \"$baseUri/api/environments/all\" -Headers $reqheaders -UseBasicParsing | ConvertFrom-Json\r\n$environment = $environments | Where-Object {$_.Name -eq $Chain_DeployTo }\r\nif ($environment -eq $null) {\r\n    throw \"Environment $Chain_DeployTo not found.\"\r\n}\r\n\r\n# Find Project\r\n$projects = Invoke-WebRequest \"$baseUri/api/projects/all\" -Headers $reqheaders -UseBasicParsing | ConvertFrom-Json\r\n$project = $projects | Where-Object {$_.Name -eq $Chain_ProjectName }\r\nif ($project -eq $null) {\r\n    throw \"Project $Chain_ProjectName not found.\"\r\n}\r\n\r\nWrite-Host \"Get release of the last successful deploy\"\r\n# Get release Id of the last successful deploy\r\ntry\r\n{\r\n    $releaseId = OctopusPreviousSuccessfulReleaseId -octopus_server $baseUri -octopus_apikey $Chain_ApiKey -project $project.Id -environment $environment.Id\r\n}\r\ncatch\r\n{\r\n    $result = $_.Exception.Response.GetResponseStream()\r\n    $reader = New-Object System.Io.StreamReader($result);\r\n    $responseBody = $reader.ReadToEnd();\r\n    throw \"Unable to find information of last successful release: $responseBody\"\r\n}\r\n\r\nWrite-Host \"Deploying release Id '$releaseId'\"\r\n\r\n# Check for existing release with given release id\r\n$releaseUri = \"$baseUri/api/releases/$releaseId\"\r\ntry {\r\n$release = Invoke-WebRequest $releaseUri -Headers $reqheaders -UseBasicParsing | ConvertFrom-Json\r\n} catch {\r\n    if ($_.Exception.Response.StatusCode.Value__ -ne 404) {\r\n        $result = $_.Exception.Response.GetResponseStream()\r\n        $reader = New-Object System.Io.StreamReader($result);\r\n        $responseBody = $reader.ReadToEnd();\r\n        throw \"Error occurred retrieving a Release: $responseBody\"\r\n    }\r\n}\r\n\r\n# We should have a release at this point\r\nif ($release -eq $null) {\r\n    throw \"Release '$releaseId' of '$Chain_ProjectName' not found. Could not create deployment.\"\r\n}\r\n\r\n# Get roollback step name\r\n$stepId = $OctopusParameters[\"Octopus.Step.Id\"]\r\nWrite-Host \"Step Id to skip in next deploy '$stepId'\"\r\n\r\ntry {\r\n$projectId = $project.Id\r\n$deploymentProcessUri = \"$baseUri/api/deploymentprocesses/deploymentprocess-$projectId\"\r\n$deploymentProcess = Invoke-RestMethod -Uri $deploymentProcessUri -ContentType application/json -Headers $reqheaders -Method Get\r\n\r\n$step = $deploymentProcess.Steps | Where-Object {$_.Id -eq $stepId }\r\n\r\n$actions = $step.Actions | Select-Object -ExpandProperty Id\r\n} catch {\r\n    $result = $_.Exception.Response.GetResponseStream()\r\n    $reader = New-Object System.Io.StreamReader($result);\r\n    $responseBody = $reader.ReadToEnd();\r\n    throw \"Error occurred getting actions to skip: $responseBody\"\r\n}\r\n\r\nWrite-Host \"Child actions to skip in next deploy $actions\"\r\n\r\n# Create deployment\r\n$deployment = @{\r\n    ReleaseId = $release.Id\r\n    EnvironmentId = $environment.Id\r\n    SkipActions = $actions\r\n} | ConvertTo-Json\r\ntry {\r\n    $version = $release.Version\r\n    Write-Host \"Deploying '$Chain_ProjectName' version '$version' to '$Chain_DeployTo'\"\r\n    $result = Invoke-WebRequest \"$baseUri/api/deployments\" -Method Post -Headers $reqHeaders -Body $deployment -UseBasicParsing | ConvertFrom-Json\r\n} catch {\r\n    $result = $_.Exception.Response.GetResponseStream()\r\n    $reader = New-Object System.Io.StreamReader($result);\r\n    $responseBody = $reader.ReadToEnd();\r\n    throw \"Error occurred creating a Deployment: $responseBody\"\r\n}\r\n\r\nif([bool]::Parse($Chain_WaitForDeployment)) {\r\n    Write-Host \"Waiting for deployment to complete before continuing...\"\r\n    $taskId = $result.TaskId\r\n    $task = Invoke-WebRequest \"$baseUri/api/tasks/$taskId\" -Headers $reqHeaders -UseBasicParsing | ConvertFrom-Json\r\n    while($task.State -eq \"Queued\" -or $task.State -eq \"Executing\") {\r\n        Start-Sleep -Seconds 2\r\n        $task = Invoke-WebRequest \"$baseUri/api/tasks/$taskId\" -Headers $reqHeaders -UseBasicParsing | ConvertFrom-Json\r\n    }\r\n}",
            "Octopus.Action.RunOnServer": "true",
            "Chain_ProjectName": "Heddoko",
            "Chain_DeployTo": "#{Octopus.Environment.Name}",
            "Chain_WaitForDeployment": "False",
            "Octopus.Action.Template.Id": "ActionTemplates-1",
            "Octopus.Action.Template.Version": "23"
          }
        }
      ],
      "Properties": {
        "Octopus.Action.TargetRoles": "web-server"
      }
    }
  ],
  "RelatedDocumentIds": [
    "Environments-2"
  ]
}
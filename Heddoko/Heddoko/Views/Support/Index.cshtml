@model Heddoko.Models.SupportIndexViewModel

@{
    ViewBag.HtmlClass = "auth-register";
    ViewBag.BodyClass = "auth-register";
}


<div class="row">
    <div class="main-body col-xs-10 col-xs-offset-1 col-md-8 col-md-offset-2 col-lg-4 col-lg-offset-4">
        <div class="form-group">
            <h2>
                @i18n.Resources.Support
            </h2>
        </div>

        @using (Html.BeginForm("Index", "Support", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    @Html.Raw(i18n.Resources.Oops)
                    <ul>
                        @Html.ValidationSummary(true, string.Empty, new { @class = "" })
                    </ul>
                </div>
            }
            @Html.Partial("_FlashMessages", Model.Flash)


            <div style="margin:20px 0 25px 0;">
                <div class="form-group">
                    <div class="input-group input-group-lg">
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-envelope"></span>
                        </span>
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = @HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.Email).ToString()) })
                    </div>
                    @Html.ValidationMessageFor(m => m.Email, string.Empty, new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group">
                <div class="input-group input-group-lg">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-user"></span>
                    </span>
                    @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = @HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.FullName).ToString()) })
                </div>
                @Html.ValidationMessageFor(m => m.FullName, string.Empty, new { @class = "text-danger" })
            </div>


            <div class="form-group">
                <div class="input-group input-group-lg">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-inbox"></span>
                    </span>
                    @Html.DropDownListFor(m => m.Type, Model.ListIssueTypes, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.Type, string.Empty, new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="input-group input-group-lg">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-flag"></span>
                    </span>
                    @Html.DropDownListFor(m => m.Importance, Model.ListIssueImportances, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.Importance, string.Empty, new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="input-group input-group-lg">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-tag"></span>
                    </span>
                    @Html.TextBoxFor(m => m.ShortDescription, new { @class = "form-control", placeholder = @HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.ShortDescription).ToString()) })
                </div>
                @Html.ValidationMessageFor(m => m.ShortDescription, string.Empty, new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="input-group input-group-lg">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-list-alt"></span>
                    </span>
                    @Html.TextAreaFor(m => m.DetailedDescription, new { @class = "form-control", placeholder = @HttpUtility.HtmlDecode(Html.DisplayNameFor(m => m.DetailedDescription).ToString()) })
                </div>
                @Html.ValidationMessageFor(m => m.DetailedDescription, string.Empty, new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="input-group input-group-lg">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-file"></span>
                    </span>
                    <input type="file" class="control-label" multiple name="@Html.NameFor(m => m.Attachments)" id="@Html.IdFor(m => m.Attachments)" />
                </div>
                @Html.ValidationMessageFor(m => m.Attachments, string.Empty, new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <input type="submit"
                       class="btn btn-default"
                       name="name"
                       value="@i18n.Resources.Send">
            </div>
        }
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/Bundles/ValidateJs")
}